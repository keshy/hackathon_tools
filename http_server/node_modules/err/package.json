{
  "name": "err",
  "description": "Simplified Node.js error-handling",
  "keywords": [
    "errors",
    "exceptions"
  ],
  "author": {
    "name": "Trevor Burnham"
  },
  "email": "trevorburnham@gmail.com",
  "homepage": "http://github.com/TrevorBurnham/err",
  "repository": {
    "type": "git",
    "url": "http://github.com/TrevorBurnham/err.git"
  },
  "licenses": [
    {
      "type": "MIT"
    }
  ],
  "version": "0.6.0",
  "engines": {
    "node": ">= 0.4.0",
    "coffee-script": "~ 1.0.1"
  },
  "dependencies": {
    "underscore": ">= 1.1.3"
  },
  "directories": {
    "lib": "./lib"
  },
  "main": "./lib/err",
  "readme": "## err\n\n**err** makes it easy to throw `Error` subclasses with different types in Node.js, with full stack traces.\n\n## Installation\n\n    npm install err\n\n## Basic usage\n\n(All code examples are in [CoffeeScript](http://coffeescript.org).)\n\nFirst, add\n\n    err = require 'err'\n\nto the top of your module. Now you can write\n\n    throw err 'IllegalArgument', 'Expected a string but got an array'\n\nDo *not* use `new`.\n\nIn a stack trace, this will give you\n\n    IllegalArgument: Expected a string but got an array\n\nThe error object will be an instance of `err.getClass('IllegalArgument')`, which is great for testing:\n\n    assert = require 'assert'\n    assert.throws myErrorProneFunction, err.getClass('IllegalArgument'), 'An IllegalArgument error should be thrown'\n\nYou can also just write\n\n    err 'Crash!'\n\nas shorthand for\n\n    new Error 'Crash!'\n\n## Logging\n\nYou can log errors as they occur by adding `true` as the last argument to an `err` call. You can also log it later by calling `.log()` on the instance (with an optional message overriding the existing `.message`). The `.isLogged` value tells you whether an error instance has already been logged. So, you might write\n\n    catch e\n      e.log() unless e.isLogged\n\nNote that this only gives you the error message. If you want the full stack trace, use `.stack`.\n\n## Copyright and license\n\nCopyright (c) 2011 Trevor Burnham and made available under the [MIT License](http://www.opensource.org/licenses/mit-license.php):\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.",
  "readmeFilename": "README.mdown",
  "_id": "err@0.6.0",
  "dist": {
    "shasum": "6f850577ef7079ae3bd4f30c215979672b0bbeb6"
  },
  "_from": "err"
}
